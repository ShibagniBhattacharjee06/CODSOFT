import tkinter as tk
from tkinter import messagebox

#  list to store contacts
contacts = []

# add a new contact
def add_contact():
    name = name_entry.get()
    phone = phone_entry.get()
    email = email_entry.get()
    address = address_entry.get()
    contact = {
        "Name": name,
        "Phone": phone,
        "Email": email,
        "Address": address
    }
    contacts.append(contact)
    update_contact_list()
    clear_entries()

#  display the list of contacts
def update_contact_list():
    contact_listbox.delete(0, tk.END)
    for contact in contacts:
        contact_listbox.insert(tk.END, contact["Name"] + " - " + contact["Phone"])

# search for a contact
def search_contact():
    search_term = search_entry.get()
    matching_contacts = [contact for contact in contacts if search_term in contact["Name"] or search_term in contact["Phone"]]
    contact_listbox.delete(0, tk.END)
    for contact in matching_contacts:
        contact_listbox.insert(tk.END, contact["Name"] + " - " + contact["Phone"])

# update a contact
def update_selected_contact():
    selected_contact = contact_listbox.curselection()
    if selected_contact:
        index = selected_contact[0]
        contact = contacts[index]
        name = name_entry.get()
        phone = phone_entry.get()
        email = email_entry.get()
        address = address_entry.get()
        contact["Name"] = name
        contact["Phone"] = phone
        contact["Email"] = email
        contact["Address"] = address
        update_contact_list()
        clear_entries()

# delete a contact
def delete_selected_contact():
    selected_contact = contact_listbox.curselection()
    if selected_contact:
        index = selected_contact[0]
        del contacts[index]
        update_contact_list()
        clear_entries()

# clear the input fields
def clear_entries():
    name_entry.delete(0, tk.END)
    phone_entry.delete(0, tk.END)
    email_entry.delete(0, tk.END)
    address_entry.delete(0, tk.END)

# the main window
root = tk.Tk()
root.title("Contact Management System")

#  labels and entry fields
name_label = tk.Label(root, text="Name:")
name_label.pack()
name_entry = tk.Entry(root)
name_entry.pack()

phone_label = tk.Label(root, text="Phone:")
phone_label.pack()
phone_entry = tk.Entry(root)
phone_entry.pack()

email_label = tk.Label(root, text="Email:")
email_label.pack()
email_entry = tk.Entry(root)
email_entry.pack()

address_label = tk.Label(root, text="Address:")
address_label.pack()
address_entry = tk.Entry(root)
address_entry.pack()

# Create and place buttons
add_button = tk.Button(root, text="Add Contact", command=add_contact)
add_button.pack()

search_label = tk.Label(root, text="Search:")
search_label.pack()
search_entry = tk.Entry(root)
search_entry.pack()
search_button = tk.Button(root, text="Search", command=search_contact)
search_button.pack()

update_button = tk.Button(root, text="Update Contact", command=update_selected_contact)
update_button.pack()
delete_button = tk.Button(root, text="Delete Contact", command=delete_selected_contact)
delete_button.pack()

# Create and place a listbox to display contacts
contact_listbox = tk.Listbox(root)
contact_listbox.pack()

# Display the initial list of contacts
update_contact_list()

root.mainloop()
